[{"content":"Delete user userdel [options] username Option Description -r Delete the user\u0026rsquo;s home directory and files -f Force the deletion of the user\u0026rsquo;s account, even if processes are still running -Z Remove the user\u0026rsquo;s SELinux security context Exemple: sudo userdel -r babakoto. This cmd will delete the user babakoto and delete his home directory\nCreate user and Setting up user useradd USERNAME useradd -m -d /PATH/TO/FOLDER USERNAME Exemple: sudo useradd -m -d /opt/app app. This cmd will add the user app and define /opt/app as is home directory. By default, home directory is set to /home/USERNAME\nAdd user to sudo group adduser USERNAME sudo After this cmd, user should restart his session.\nChange User password passwd USERNAME ","permalink":"https://ryuka25.github.io/posts/user-management/","summary":"User management in linux OS","title":"User management"},{"content":"How authentication process work in Single Page Application (SPA)\nüåç General concept // Hook de Navigation : Ex√©cut√© avant chaque navigation router.beforeEach((to, from, next) =\u0026gt; { // √âtape 1: Acc√©der aux informations de l\u0026#39;utilisateur authentifi√© const authUser = store.getters[\u0026#34;auth/authUser\u0026#34;]; // √âtape 2: V√©rifier si la route n√©cessite une authentification const reqAuth = to.matched.some((record) =\u0026gt; record.meta.requiresAuth); // √âtape 3: Pr√©parer l\u0026#39;objet de requ√™te de redirection vers la page de connexion const loginQuery = { path: \u0026#34;/login\u0026#34;, query: { redirect: to.fullPath } }; if (reqAuth \u0026amp;\u0026amp; !authUser) { // √âtape 4: La route n√©cessite une authentification, mais l\u0026#39;utilisateur n\u0026#39;est pas authentifi√© // √âtape 5: Dispatch de l\u0026#39;action pour obtenir les informations d\u0026#39;authentification de l\u0026#39;utilisateur store.dispatch(\u0026#34;auth/getAuthUser\u0026#34;).then(() =\u0026gt; { // V√©rifier √† nouveau si l\u0026#39;utilisateur est authentifi√© apr√®s la r√©solution de l\u0026#39;action asynchrone if (!store.getters[\u0026#34;auth/authUser\u0026#34;]) // √âtape 6: Redirection vers la page de connexion avec la redirection pr√©par√©e next(loginQuery); else // √âtape 7: Utilisateur authentifi√©, permettre la continuation de la navigation next(); }); } else { // √âtape 8: La route ne n√©cessite pas d\u0026#39;authentification, permettre la continuation de la navigation next(); // Assurez-vous toujours d\u0026#39;appeler next()! } }); ‚ö†Ô∏è Notabene Using this approch can costs a lot of request if we test for a token validity everytime we use it. Instead we can just check for a variable in our localstorage\nOur variable in localstorage will be updated when:\nusers loged in users loged out token has expired and refresh token is no longer valide ","permalink":"https://ryuka25.github.io/posts/authentification_in_spa/","summary":"\u003cp\u003eHow authentication process work in Single Page Application (SPA)\u003c/p\u003e","title":"Authentification in spa üîê"},{"content":"This is the first post for my customed blogs\nCode sample Then, this is a sample code of python one of my principal stack.\n# This program prints Hello, world! print(\u0026#39;Hello, world!\u0026#39;) More We can add something else for the showcase purpose.\nList 1 List 2 ","permalink":"https://ryuka25.github.io/posts/first_post/","summary":"\u003cp\u003eThis is the first post for my customed blogs\u003c/p\u003e","title":"First post showcase"}]